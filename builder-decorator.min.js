//! MIT License, Topher Winward 2015.
//! https://github.com/Winwardo/js-builder-decorator
'use strict'; !function () { var a = function (a, b) { void 0 == b && (b = {}); var c = function (a) { var c = Object.create(a); if (b.allFieldsMustBeSet === !0) for (var d in c)c[d] = null; return c; }, d = function () { var d = {}, e = {}, f = function (a) { return function (b) { return d[a] = b, this; }; }, g = function () { for (var b in a)e[b] = f(b); }, h = function () { e.build = function () { var c = {}, e = function () { if (b.allFieldsMustBeSet === !0) { var a = []; for (var c in d) { var e = d[c]; null === e && a.push(c); } if (0 !== a.length) throw 'The following fields were not set: ' + a; } }, f = function () { var e = function (a) { return function () { return d[a]; }; }; for (var f in d)b.lockFunctionsAfterBuild && a[f]instanceof Function ? c[f] = d[f] : c[f] = e(f); }; return e(), f(), c; }; }, i = function () { if (a instanceof Function)a = new a; else if (a instanceof Array) throw new Error('An array may not be decorated.'); return d = c(a), g(), h(), e; }; return i(); }; return d; }; 'undefined' != typeof module && (module.exports = { BuilderDecorator: a }), 'undefined' != typeof window && (window.BuilderDecorator = a); }();
